
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Furkan
 */
public class DoktorYonetimi extends javax.swing.JFrame {

    static ArrayList<doktorlar> dr = new ArrayList();

    doktorlar d1 = new doktorlar("11111111111", "Mehmet Öz", "Kalp Cerrahı", "200");
    doktorlar d2 = new doktorlar("22222222222", "Gazi Yaşargil", "Beyin Cerrahı", "300");
    doktorlar d3 = new doktorlar("33333333333", "Münci Kalayoğlu", "Çocuk Doktoru", "250");
    doktorlar d4 = new doktorlar("44444444444", "Ömer Özkan", "Estetik Uzmanı", "400");

    DefaultTableModel dtm = new DefaultTableModel();
    DefaultComboBoxModel dcm = new DefaultComboBoxModel();
    DefaultComboBoxModel dcm2 = new DefaultComboBoxModel();

    public DoktorYonetimi() {
        initComponents();
        box.setModel(dcm);
        doktorbox.setModel(dcm2);
        dcm2.addElement("Mehmet Öz");
        dcm2.addElement("Gazi Yaşargil");
        dcm2.addElement("Münci Kalayoğlu");
        dcm2.addElement("Ömer Özkan");

        dtm.setColumnIdentifiers(new String[]{"Tc", "Ad-Soyad", "Uzmanlık", "Ucret"});
        dcm.addElement("Kalp Cerrahı");
        dcm.addElement("Beyin Cerrahı");
        dcm.addElement("Estetik Uzmanı");
        dcm.addElement("Çocuk Doktoru");

        table.setModel(dtm);
        dr.add(d1);
        dr.add(d2);
        dr.add(d3);
        dr.add(d4);

    }

    boolean tcNumarasınınAynısındanVarMı() {     // TC numara kontrolü
        boolean aynıMı = false;
        for (doktorlar d : DoktorYonetimi.dr) {
            if (d.getTc().equals(tc.getText())) {
                aynıMı = true;
            }
        }
        return aynıMı;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        kaydet = new javax.swing.JButton();
        ara = new javax.swing.JButton();
        temizle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        guncelle = new javax.swing.JButton();
        kaldir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        box = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        doktorbox = new javax.swing.JComboBox<>();
        isim = new javax.swing.JTextField();
        ucret = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tc = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Uzmanlık Alanı");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        kaydet.setBackground(new java.awt.Color(255, 102, 102));
        kaydet.setText("Kaydet");
        kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaydetActionPerformed(evt);
            }
        });
        jPanel1.add(kaydet, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 228, 114, -1));

        ara.setBackground(new java.awt.Color(255, 102, 102));
        ara.setText("Ara");
        ara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                araActionPerformed(evt);
            }
        });
        jPanel1.add(ara, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 228, 115, -1));

        temizle.setBackground(new java.awt.Color(255, 102, 102));
        temizle.setText("Temizle");
        temizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temizleActionPerformed(evt);
            }
        });
        jPanel1.add(temizle, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 228, 100, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 290, 391, 121));

        guncelle.setBackground(new java.awt.Color(255, 102, 102));
        guncelle.setText("Güncelle");
        guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleActionPerformed(evt);
            }
        });
        jPanel1.add(guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 440, -1, -1));

        kaldir.setBackground(new java.awt.Color(255, 102, 102));
        kaldir.setText("Kaldır");
        kaldir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaldirActionPerformed(evt);
            }
        });
        jPanel1.add(kaldir, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 440, -1, -1));

        jLabel3.setText("Doktor Adı");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxActionPerformed(evt);
            }
        });
        jPanel1.add(box, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 87, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("DOKTOR YÖNETİM SAYFASI");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));

        doktorbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(doktorbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 87, -1));
        jPanel1.add(isim, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 90, -1));
        jPanel1.add(ucret, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 190, 87, -1));

        jLabel1.setText("Ücret");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, -1));

        jLabel4.setText("KAYITLI DOKTORLAR");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));
        jPanel1.add(tc, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 90, -1));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setText("Geri");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, -1));

        jLabel5.setText("TC");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaydetActionPerformed
        if (tcNumarasınınAynısındanVarMı()) {
            JOptionPane.showMessageDialog(this, "TC numaranız veri tabanındaki birisi ile uyuşuyor.\nLütfen doğru girdiğinizden emin olunuz!", "Hata!", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            try {
                dtm.addRow(new Object[]{tc.getText(), isim.getText(), box.getSelectedItem(), ucret.getText()});  // Tableye girilen verileri (textfield ve combobox) girme
                doktorlar dn = new doktorlar(tc.getText(), isim.getText(), box.getSelectedItem().toString(), ucret.getText());
                dr.add(dn);  //ArrayListe verileri ekleme
                dcm2.addElement(isim.getText());
                JOptionPane.showMessageDialog(this, "Yeni Doktor Başarıyla Eklenmiştir.");

            } catch (RuntimeException e) {

            }
        }


    }//GEN-LAST:event_kaydetActionPerformed

    private void araActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_araActionPerformed
        try {
            // Arraylistteki verilerin hepsini table de görme
            for (int i = table.getRowCount() - 1; i >= 0; i--) {
                dtm.removeRow(i);
            }

            Object rowData[] = new Object[4];
            for (int i = 0; i < dr.size(); i++) {

                rowData[0] = dr.get(i).getTc();
                rowData[1] = dr.get(i).getDoktoradi();
                rowData[2] = dr.get(i).getUzmanlik();
                rowData[3] = dr.get(i).getUcret();

                dtm.addRow(rowData);

            }
        } catch (ArrayIndexOutOfBoundsException e) {

        }


    }//GEN-LAST:event_araActionPerformed

    private void temizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temizleActionPerformed
// Tüm tableyi temizleme
        for (int i = table.getRowCount() - 1; i >= 0; i--) {
            dtm.removeRow(i);
        }
    }//GEN-LAST:event_temizleActionPerformed

    private void guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guncelleActionPerformed

        int secilisatir = table.getSelectedRow();

        //Tabledeki verileri güncelleme
        try {
            String tc1 = tc.getText();
            String isim1 = isim.getText();
            String alan1 = box.getSelectedItem().toString();
            String ucret1 = ucret.getText();

           

            dtm.setValueAt(tc1, secilisatir, 0);
            dtm.setValueAt(isim1, secilisatir, 1);
            dtm.setValueAt(alan1, secilisatir, 2);
            dtm.setValueAt(ucret1, secilisatir, 3);

            JOptionPane.showMessageDialog(this, "Başarıyla Güncellendi");

            tc.setText("");
            isim.setText("");
            ucret.setText("");

            if (table.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Table boş");
            }
        } catch (NullPointerException e) {

        }


    }//GEN-LAST:event_guncelleActionPerformed

    private void kaldirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaldirActionPerformed
        // Tabledeki verilerin hepsini kaldırma   

        try {
            if (table.getSelectedRow() == -1) {  // Satırın seçili olmadığını kontrol etmek için
                return;

            }
            for (int i = 0; i < table.getRowCount(); i++) {       // table satırlarını sayma
                for (int j = 0; j < doktorbox.getItemCount(); j++) { //box içindeki itemleri sayma

                    if (table.getModel().getValueAt(i, 1).equals(doktorbox.getItemAt(j))) {

                        dcm2.removeElementAt(j);    // Tablede kaldırılan 1 numaralı sütundaki veriler eğer box da varsa silme
                    }
                }
            }
            String[] seçimler = {"Evet", "Hayır"};  // Mesaj
            int seçim = JOptionPane.showOptionDialog(this, "Bu doktoru silmek istediğinize emin misiniz!", "Uyarı!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, seçimler, seçimler[0]);

            if (seçim == 0) {
                dtm.removeRow(table.getSelectedRow());
                
                
                
                for (int i = 0; i < table.getRowCount(); i++) {
                    String tcno= (String)table.getModel().getValueAt(i, 0);
                    for(doktorlar o : dr){
                        if(tcno.equals(o.getTc())){
                            dr.remove(o);
                        }
                        
                        
                    }
                    
                }
                
                JOptionPane.showMessageDialog(this, "Doktor silinmiştir!", "Uyarı!", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Silmek istediğiniz doktoru seçiniz!", "Uyarı!", JOptionPane.WARNING_MESSAGE);

            }
        } catch (RuntimeException r) {

        }


    }//GEN-LAST:event_kaldirActionPerformed

    private void boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxActionPerformed

    }//GEN-LAST:event_boxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GöstergePaneli go = new GöstergePaneli();
        go.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoktorYonetimi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ara;
    private javax.swing.JComboBox<String> box;
    private javax.swing.JComboBox<String> doktorbox;
    private javax.swing.JButton guncelle;
    private javax.swing.JTextField isim;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kaldir;
    private javax.swing.JButton kaydet;
    private javax.swing.JTable table;
    private javax.swing.JTextField tc;
    private javax.swing.JButton temizle;
    private javax.swing.JTextField ucret;
    // End of variables declaration//GEN-END:variables
}
